---
- name: Ensure pg_dir is empty and no exist
  find:
    path: "{{ postgres_db_data + '/' + postgres_db_dir + '/' }}"
  register: pg_dir_files

- name: Ensure postgres_db_data is exist
  stat:
    path: "{{ postgres_db_data }}"
  register: pg_data_dir

- name: create dir {{ postgres_db_data }}
  file:
    path: "{{ postgres_db_data }}" 
    owner: root
    group: root
    mode: 0755
    state: directory
  when: not pg_data_dir.stat.exists

- name: create database dir {{ postgres_db_dir }}
  file:
    path: "{{ (postgres_db_data|replace (' ', '')) + '/' + postgres_db_dir}}"
    owner: postgres
    group: postgres
    mode:  0750
    state: directory
  when: pg_dir_files.matched == 0

- name: cmd initdb
  shell: >
    {{ postgres_db_init }}
    --pgdata={{ postgres_db_data + '/' + postgres_db_dir }}
    --locale={{ postgres_db_locale }}
    {{ '--data-checksums' if postgres_db_checksum }}
    {{ postgres_db_extra_opt }}
  when: pg_dir_files.matched == 0

- name: add replication to pg_hba.conf master
  lineinfile:
    path: "{{ postgres_db_data }}/{{ postgres_db_dir }}/pg_hba.conf"
    line: "host replication {{ postgres_db_rep_role }} {{ inventory_replica_ip }}/32 md5"
  notify: restart postgres
  when: not inventory_replica_signal

- name: add to postgresql.conf block
  ansible.builtin.blockinfile:
    path: /data/pgbase/prod/postgresql.conf
    block: |
      wal_level = replica
      log_replication_commands = on
      log_min_messages = info
      log_min_error_statement = info
      archive_mode = on
      archive_command = 'cd .'
      max_wal_senders = 10
      hot_standby = on
      primary_conninfo = 'user={{postgres_db_rep_role}} passfile=''/var/lib/postgresql/.pgpass'' hostaddr={{ inventory_replica_ip }} channel_binding=disable port=5432 sslmode=disable sslcompression=0 ssl_min_protocol_version=TLSv1.2 gssencmode=disable krbsrvname=postgres target_session_attrs=any'
      wal_keep_size = {{ postgres_db_rep_size }}
      primary_slot_name = {{ ansible_facts['nodename'] }}
  when: not inventory_replica_signal

- name: Enable postgresql service
  systemd_service:
    name: postgrespro-1c-{{ postgres_pg_ver }}.service
    state: started
    daemon_reload: true
    enabled: true
