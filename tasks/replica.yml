---
- name: be sure  Data folder exist with standby.signal
  stat:
    path: "{{ postgres_db_data }}/{{ item.key }}/standby.signal" 
  loop: "{{ postgres_db_dir_port | dict2items }}"
  register: standby_signal

- name: Update postgres_db_dir_port with standby_signl 
  set_fact:
    postgres_db_dir_port: "{{ postgres_db_dir_port | combine({item.item.key: postgres_db_dir_port[item.item.key] | combine({'standby_signal': item.stat.exists})}) }}"
  loop: "{{ standby_signal.results }}"


    #- name: delete default data in catalog Data
    #  ansible.builtin.file:
    #    path: "{{ postgres_db_data }}/{{ item.key }}/"
    #    state: absent
    #  when: item.value.exists == false and inventory_replica_signal == true 
    #  loop: "{{ postgres_db_dir_port | dict2items }}"
    #  tags: replica
    #
    #- name: Ensure postgres_db_data is exist
    #  stat:
    #    path: "{{ postgres_db_data }}"
    #  register: pg_data_dir_rep
    #  when:  inventory_replica_signal == true
    #  tags: replica
    #
    #- name: create dir {{ postgres_db_data }} 
    #  file:
    #    path: "{{ postgres_db_data }}" 
    #    owner: root
    #    group: root
    #    mode: 0755/p
    #    state: directory
    #  when:  inventory_replica_signal == true
    #  tags: replica
    #
    #- name: create folder to PG data
    #  file:
    #    owner: postgres
    #    group: postgres
    #    state: directory
    #    mode: '0750'
    #    recurse: true
    #    path: "{{ postgres_db_data }}/{{ item.key }}"
    #  when: item.value.exists == false and inventory_replica_signal == true
    #  loop: "{{ postgres_db_dir_port | dict2items }}"
    #  tags: replica

- name: create pg_basebackup to replica
  become_user: postgres
  command: "{{ pg_basebackup }}" -R -Xs -h "{{ inventory_replica_ip }}" -D "{{ postgres_db_data }}/{{ item.key }}" -U "{{ postgres_db_rep_role }}" -w -p "{{ item.value.port }}"
  loop: "{{ postgres_db_dir_port | dict2items }}"
  when: item.value.standby_signal == false
  vars:
    pg_basebackup: "{{ '/opt/pgpro/1c-' + postgres_pg_ver + '/bin/pg_basebackup' if postgres_pg_1c | bool else 'pg_basebackup'  }}"
 
- name: add access replication to pg_hba.conf
  lineinfile:
    marker: "# {mark} replication access"
    path: "{{ postgres_db_data }}/{{ item.key }}/pg_hba.conf"
    line: "host replication {{ postgres_db_rep_role }} {{ inventory_replica_ip }}/32 md5"
  loop: "{{ postgres_db_dir_port | dict2items }}"
  notify: start postgres

- name: start postgres* service
  systemd_service:
    name: postgrespro-1c-{{ postgres_pg_ver }}.service
    state: started
    enabled: true
  vars:  
    postgres_pg_ver: "{{ 'postgrespro-1c-' + item.key  if postgres_pg_1c | bool else 'postgresql@' + postgres_pg_ver + '-main' }}"
  loop: "{{ postgres_db_dir_port | dict2items }}"

